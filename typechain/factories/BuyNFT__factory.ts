/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { BuyNFT } from "../BuyNFT";

export class BuyNFT__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _WEB3DAONFT: string,
    _DaoVault: string,
    _WETH: string,
    overrides?: Overrides
  ): Promise<BuyNFT> {
    return super.deploy(
      _WEB3DAONFT,
      _DaoVault,
      _WETH,
      overrides || {}
    ) as Promise<BuyNFT>;
  }
  getDeployTransaction(
    _WEB3DAONFT: string,
    _DaoVault: string,
    _WETH: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _WEB3DAONFT,
      _DaoVault,
      _WETH,
      overrides || {}
    );
  }
  attach(address: string): BuyNFT {
    return super.attach(address) as BuyNFT;
  }
  connect(signer: Signer): BuyNFT__factory {
    return super.connect(signer) as BuyNFT__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): BuyNFT {
    return new Contract(address, _abi, signerOrProvider) as BuyNFT;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_WEB3DAONFT",
        type: "address",
      },
      {
        internalType: "address",
        name: "_DaoVault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_WETH",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Buy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_DaoVault",
        type: "address",
      },
    ],
    name: "SetDaoVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxTotalSupply",
        type: "uint256",
      },
    ],
    name: "SetMaxTotalSupply",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "SetPrice",
    type: "event",
  },
  {
    inputs: [],
    name: "DaoVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WEB3DAONFT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_DaoVault",
        type: "address",
      },
    ],
    name: "setDaoVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxTotalSupply",
        type: "uint256",
      },
    ],
    name: "setMaxTotalSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040526658d15e1762800060025534801561001b57600080fd5b50604051610b24380380610b2483398101604081905261003a916100f0565b61004333610084565b606092831b6001600160601b0319908116608052600180546001600160a01b0319166001600160a01b03949094169390931790925590911b1660a052610132565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100eb57600080fd5b919050565b600080600060608486031215610104578283fd5b61010d846100d4565b925061011b602085016100d4565b9150610129604085016100d4565b90509250925092565b60805160601c60a05160601c6109b26101726000396000818161015e01526103a10152600081816101850152818161044c01526104af01526109b26000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806398b8c4e11161007157806398b8c4e11461013d578063a035b1fe14610150578063ad5c464814610159578063b7627eee14610180578063f088d547146101a7578063f2fde38b146101ba57600080fd5b80632ab4d052146100b95780633f3e4c11146100d55780634b799db1146100ea578063715018a6146100fd5780638da5cb5b1461010557806391b7f5ed1461012a575b600080fd5b6100c260035481565b6040519081526020015b60405180910390f35b6100e86100e3366004610898565b6101cd565b005b6100e86100f8366004610871565b61023c565b6100e86102b4565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100cc565b6100e8610138366004610898565b6102ea565b600154610112906001600160a01b031681565b6100c260025481565b6101127f000000000000000000000000000000000000000000000000000000000000000081565b6101127f000000000000000000000000000000000000000000000000000000000000000081565b6100e86101b5366004610871565b610349565b6100e86101c8366004610871565b6105c5565b6000546001600160a01b031633146102005760405162461bcd60e51b81526004016101f790610917565b60405180910390fd5b60038190556040518181527f5d18a6b3e7e847824d58b9b569ab040f1707a3e20e54857610a00028e4822975906020015b60405180910390a150565b6000546001600160a01b031633146102665760405162461bcd60e51b81526004016101f790610917565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527fb329e64befdec2a048fc9bc0ec49385e5f414f5047e9fe44d771240d47e307a590602001610231565b6000546001600160a01b031633146102de5760405162461bcd60e51b81526004016101f790610917565b6102e86000610660565b565b6000546001600160a01b031633146103145760405162461bcd60e51b81526004016101f790610917565b60028190556040518181527f4f5539c0409dfc4cb06f64cbd31237e1fbfe443f531584bf4dd77ec7fc5ba7b190602001610231565b600154600254604080513360248201526001600160a01b0393841660448201526064808201939093528151808203909301835260840190526020810180516001600160e01b03166323b872dd60e01b1790526103c7917f000000000000000000000000000000000000000000000000000000000000000016906106b0565b5060015460025460405163b6b55f2560e01b81526001600160a01b039092169163b6b55f25916103fd9160040190815260200190565b600060405180830381600087803b15801561041757600080fd5b505af115801561042b573d6000803e3d6000fd5b50506040516335313c2160e11b81526001600160a01b0384811660048301527f0000000000000000000000000000000000000000000000000000000000000000169250636a6278429150602401600060405180830381600087803b15801561049257600080fd5b505af11580156104a6573d6000803e3d6000fd5b505050506003547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561050657600080fd5b505afa15801561051a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053e91906108b0565b111561058c5760405162461bcd60e51b815260206004820152601c60248201527f4275794e46543a206f766572206d617820746f74616c537570706c790000000060448201526064016101f7565b6040516001600160a01b03821681527f5c6c890314aa0d49059c35b35ff86ffb43efe8f543dc3691558f39dfa4a8201190602001610231565b6000546001600160a01b031633146105ef5760405162461bcd60e51b81526004016101f790610917565b6001600160a01b0381166106545760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101f7565b61065d81610660565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60606106f283836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c656400008152506106f9565b9392505050565b60606107088484600085610710565b949350505050565b6060824710156107715760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101f7565b843b6107bf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101f7565b600080866001600160a01b031685876040516107db91906108c8565b60006040518083038185875af1925050503d8060008114610818576040519150601f19603f3d011682016040523d82523d6000602084013e61081d565b606091505b509150915061082d828286610838565b979650505050505050565b606083156108475750816106f2565b8251156108575782518084602001fd5b8160405162461bcd60e51b81526004016101f791906108e4565b600060208284031215610882578081fd5b81356001600160a01b03811681146106f2578182fd5b6000602082840312156108a9578081fd5b5035919050565b6000602082840312156108c1578081fd5b5051919050565b600082516108da81846020870161094c565b9190910192915050565b602081526000825180602084015261090381604085016020870161094c565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60005b8381101561096757818101518382015260200161094f565b83811115610976576000848401525b5050505056fea26469706673582212205ab353d005ee1290e6e5f26cacef1f3e3c211ba1ef20844fed05561cfc04560a64736f6c63430008040033";
