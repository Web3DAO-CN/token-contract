/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IDaoSponsorInterface extends ethers.utils.Interface {
  functions: {
    "DaoTreasury()": FunctionFragment;
    "DaoVault()": FunctionFragment;
    "SPONSOR_ATTR_ID()": FunctionFragment;
    "WEB3DAONFT()": FunctionFragment;
    "borrowGas(uint256,uint256)": FunctionFragment;
    "lockVault(uint256)": FunctionFragment;
    "max()": FunctionFragment;
    "maxBorrow()": FunctionFragment;
    "quit(uint256,uint256)": FunctionFragment;
    "returnGas(uint256,uint256)": FunctionFragment;
    "setDaoTreasury(address)": FunctionFragment;
    "setDaoVault(address)": FunctionFragment;
    "setMaxBorrow(uint256)": FunctionFragment;
    "sponsor(uint256,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "DaoTreasury",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "DaoVault", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "SPONSOR_ATTR_ID",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "WEB3DAONFT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "borrowGas",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "lockVault",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "max", values?: undefined): string;
  encodeFunctionData(functionFragment: "maxBorrow", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "quit",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "returnGas",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setDaoTreasury",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "setDaoVault", values: [string]): string;
  encodeFunctionData(
    functionFragment: "setMaxBorrow",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "sponsor",
    values: [BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "DaoTreasury",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "DaoVault", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "SPONSOR_ATTR_ID",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "WEB3DAONFT", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "borrowGas", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "lockVault", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "max", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "maxBorrow", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "quit", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "returnGas", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setDaoTreasury",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDaoVault",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMaxBorrow",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "sponsor", data: BytesLike): Result;

  events: {
    "BorrowGas(uint256,uint256,uint256)": EventFragment;
    "Quit(uint256,uint256,uint256)": EventFragment;
    "ReturnGas(uint256,uint256,uint256)": EventFragment;
    "SetDaoTreasury(address)": EventFragment;
    "SetDaoVault(address)": EventFragment;
    "SetMaxBorrow(uint256)": EventFragment;
    "Sponsor(uint256,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "BorrowGas"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Quit"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ReturnGas"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetDaoTreasury"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetDaoVault"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetMaxBorrow"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Sponsor"): EventFragment;
}

export class IDaoSponsor extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IDaoSponsorInterface;

  functions: {
    DaoTreasury(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "DaoTreasury()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    DaoVault(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "DaoVault()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    SPONSOR_ATTR_ID(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "SPONSOR_ATTR_ID()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    WEB3DAONFT(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "WEB3DAONFT()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    borrowGas(
      tokenId: BigNumberish,
      gasAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "borrowGas(uint256,uint256)"(
      tokenId: BigNumberish,
      gasAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    lockVault(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: {
        sponsorAmount: BigNumber;
        stakeAmount: BigNumber;
        borrowGasAmount: BigNumber;
        time: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
      };
    }>;

    "lockVault(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: {
        sponsorAmount: BigNumber;
        stakeAmount: BigNumber;
        borrowGasAmount: BigNumber;
        time: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
      };
    }>;

    max(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "max()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    maxBorrow(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "maxBorrow()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    quit(
      tokenId: BigNumberish,
      sponsorAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "quit(uint256,uint256)"(
      tokenId: BigNumberish,
      sponsorAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    returnGas(
      tokenId: BigNumberish,
      gasAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "returnGas(uint256,uint256)"(
      tokenId: BigNumberish,
      gasAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setDaoTreasury(
      _DaoTreasury: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setDaoTreasury(address)"(
      _DaoTreasury: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setDaoVault(
      _DaoVault: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setDaoVault(address)"(
      _DaoVault: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setMaxBorrow(
      _maxBorrow: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setMaxBorrow(uint256)"(
      _maxBorrow: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    sponsor(
      tokenId: BigNumberish,
      ethAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "sponsor(uint256,uint256)"(
      tokenId: BigNumberish,
      ethAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  DaoTreasury(overrides?: CallOverrides): Promise<string>;

  "DaoTreasury()"(overrides?: CallOverrides): Promise<string>;

  DaoVault(overrides?: CallOverrides): Promise<string>;

  "DaoVault()"(overrides?: CallOverrides): Promise<string>;

  SPONSOR_ATTR_ID(overrides?: CallOverrides): Promise<BigNumber>;

  "SPONSOR_ATTR_ID()"(overrides?: CallOverrides): Promise<BigNumber>;

  WEB3DAONFT(overrides?: CallOverrides): Promise<string>;

  "WEB3DAONFT()"(overrides?: CallOverrides): Promise<string>;

  borrowGas(
    tokenId: BigNumberish,
    gasAmount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "borrowGas(uint256,uint256)"(
    tokenId: BigNumberish,
    gasAmount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  lockVault(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    sponsorAmount: BigNumber;
    stakeAmount: BigNumber;
    borrowGasAmount: BigNumber;
    time: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
  }>;

  "lockVault(uint256)"(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    sponsorAmount: BigNumber;
    stakeAmount: BigNumber;
    borrowGasAmount: BigNumber;
    time: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
  }>;

  max(overrides?: CallOverrides): Promise<BigNumber>;

  "max()"(overrides?: CallOverrides): Promise<BigNumber>;

  maxBorrow(overrides?: CallOverrides): Promise<BigNumber>;

  "maxBorrow()"(overrides?: CallOverrides): Promise<BigNumber>;

  quit(
    tokenId: BigNumberish,
    sponsorAmount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "quit(uint256,uint256)"(
    tokenId: BigNumberish,
    sponsorAmount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  returnGas(
    tokenId: BigNumberish,
    gasAmount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "returnGas(uint256,uint256)"(
    tokenId: BigNumberish,
    gasAmount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setDaoTreasury(
    _DaoTreasury: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setDaoTreasury(address)"(
    _DaoTreasury: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setDaoVault(
    _DaoVault: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setDaoVault(address)"(
    _DaoVault: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setMaxBorrow(
    _maxBorrow: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setMaxBorrow(uint256)"(
    _maxBorrow: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  sponsor(
    tokenId: BigNumberish,
    ethAmount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "sponsor(uint256,uint256)"(
    tokenId: BigNumberish,
    ethAmount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    DaoTreasury(overrides?: CallOverrides): Promise<string>;

    "DaoTreasury()"(overrides?: CallOverrides): Promise<string>;

    DaoVault(overrides?: CallOverrides): Promise<string>;

    "DaoVault()"(overrides?: CallOverrides): Promise<string>;

    SPONSOR_ATTR_ID(overrides?: CallOverrides): Promise<BigNumber>;

    "SPONSOR_ATTR_ID()"(overrides?: CallOverrides): Promise<BigNumber>;

    WEB3DAONFT(overrides?: CallOverrides): Promise<string>;

    "WEB3DAONFT()"(overrides?: CallOverrides): Promise<string>;

    borrowGas(
      tokenId: BigNumberish,
      gasAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "borrowGas(uint256,uint256)"(
      tokenId: BigNumberish,
      gasAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    lockVault(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      sponsorAmount: BigNumber;
      stakeAmount: BigNumber;
      borrowGasAmount: BigNumber;
      time: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
    }>;

    "lockVault(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      sponsorAmount: BigNumber;
      stakeAmount: BigNumber;
      borrowGasAmount: BigNumber;
      time: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
    }>;

    max(overrides?: CallOverrides): Promise<BigNumber>;

    "max()"(overrides?: CallOverrides): Promise<BigNumber>;

    maxBorrow(overrides?: CallOverrides): Promise<BigNumber>;

    "maxBorrow()"(overrides?: CallOverrides): Promise<BigNumber>;

    quit(
      tokenId: BigNumberish,
      sponsorAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "quit(uint256,uint256)"(
      tokenId: BigNumberish,
      sponsorAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    returnGas(
      tokenId: BigNumberish,
      gasAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "returnGas(uint256,uint256)"(
      tokenId: BigNumberish,
      gasAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    setDaoTreasury(
      _DaoTreasury: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setDaoTreasury(address)"(
      _DaoTreasury: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setDaoVault(_DaoVault: string, overrides?: CallOverrides): Promise<void>;

    "setDaoVault(address)"(
      _DaoVault: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setMaxBorrow(
      _maxBorrow: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setMaxBorrow(uint256)"(
      _maxBorrow: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    sponsor(
      tokenId: BigNumberish,
      ethAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "sponsor(uint256,uint256)"(
      tokenId: BigNumberish,
      ethAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    BorrowGas(tokenId: null, gasAmount: null, stakeAmount: null): EventFilter;

    Quit(
      tokenId: BigNumberish | null,
      sponsorAmount: null,
      quitAmount: null
    ): EventFilter;

    ReturnGas(tokenId: null, gasAmount: null, unStakeAmount: null): EventFilter;

    SetDaoTreasury(_DaoTreasury: null): EventFilter;

    SetDaoVault(_DaoVault: null): EventFilter;

    SetMaxBorrow(_maxBorrow: null): EventFilter;

    Sponsor(
      tokenId: BigNumberish | null,
      ethAmount: null,
      sponsorAmount: null
    ): EventFilter;
  };

  estimateGas: {
    DaoTreasury(overrides?: CallOverrides): Promise<BigNumber>;

    "DaoTreasury()"(overrides?: CallOverrides): Promise<BigNumber>;

    DaoVault(overrides?: CallOverrides): Promise<BigNumber>;

    "DaoVault()"(overrides?: CallOverrides): Promise<BigNumber>;

    SPONSOR_ATTR_ID(overrides?: CallOverrides): Promise<BigNumber>;

    "SPONSOR_ATTR_ID()"(overrides?: CallOverrides): Promise<BigNumber>;

    WEB3DAONFT(overrides?: CallOverrides): Promise<BigNumber>;

    "WEB3DAONFT()"(overrides?: CallOverrides): Promise<BigNumber>;

    borrowGas(
      tokenId: BigNumberish,
      gasAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "borrowGas(uint256,uint256)"(
      tokenId: BigNumberish,
      gasAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    lockVault(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "lockVault(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    max(overrides?: CallOverrides): Promise<BigNumber>;

    "max()"(overrides?: CallOverrides): Promise<BigNumber>;

    maxBorrow(overrides?: CallOverrides): Promise<BigNumber>;

    "maxBorrow()"(overrides?: CallOverrides): Promise<BigNumber>;

    quit(
      tokenId: BigNumberish,
      sponsorAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "quit(uint256,uint256)"(
      tokenId: BigNumberish,
      sponsorAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    returnGas(
      tokenId: BigNumberish,
      gasAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "returnGas(uint256,uint256)"(
      tokenId: BigNumberish,
      gasAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setDaoTreasury(
      _DaoTreasury: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setDaoTreasury(address)"(
      _DaoTreasury: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setDaoVault(_DaoVault: string, overrides?: Overrides): Promise<BigNumber>;

    "setDaoVault(address)"(
      _DaoVault: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setMaxBorrow(
      _maxBorrow: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setMaxBorrow(uint256)"(
      _maxBorrow: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    sponsor(
      tokenId: BigNumberish,
      ethAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "sponsor(uint256,uint256)"(
      tokenId: BigNumberish,
      ethAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    DaoTreasury(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "DaoTreasury()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    DaoVault(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "DaoVault()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    SPONSOR_ATTR_ID(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "SPONSOR_ATTR_ID()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    WEB3DAONFT(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "WEB3DAONFT()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    borrowGas(
      tokenId: BigNumberish,
      gasAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "borrowGas(uint256,uint256)"(
      tokenId: BigNumberish,
      gasAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    lockVault(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "lockVault(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    max(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "max()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    maxBorrow(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "maxBorrow()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    quit(
      tokenId: BigNumberish,
      sponsorAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "quit(uint256,uint256)"(
      tokenId: BigNumberish,
      sponsorAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    returnGas(
      tokenId: BigNumberish,
      gasAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "returnGas(uint256,uint256)"(
      tokenId: BigNumberish,
      gasAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setDaoTreasury(
      _DaoTreasury: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setDaoTreasury(address)"(
      _DaoTreasury: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setDaoVault(
      _DaoVault: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setDaoVault(address)"(
      _DaoVault: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setMaxBorrow(
      _maxBorrow: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setMaxBorrow(uint256)"(
      _maxBorrow: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    sponsor(
      tokenId: BigNumberish,
      ethAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "sponsor(uint256,uint256)"(
      tokenId: BigNumberish,
      ethAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
